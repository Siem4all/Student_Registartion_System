{"version":3,"file":"livelatency.js","sourceRoot":"","sources":["../../lib/eventobservers/livelatency.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventEmitter } from 'events';\nimport { Player, VendorPlayer } from '../player';\n\nconst MAX_PLAYBACK_RATE = 1.05;\nconst DEFAULT_PLAYBACK_RATE = 1;\n\n// All units are in seconds\nconst SEEK_BUFFER = 3;\nconst MIN_LATENCY_PLAYBACK_INCREASE_THRESHOLD = 3;\nconst MAX_LATENCY_PLAYBACK_INCREASE_THRESHOLD = 5;\n\n/**\n * [[LiveLatencyEventObserver]] listens to player events and monitor live latency values.\n * This observer will then emit events when certain thresholds are detected.\n * @private\n */\nexport class LiveLatencyEventObserver extends EventEmitter {\n\n  private _active: boolean = false;\n  private _isHighLatencyReductionEnabled: boolean;\n  private _telemetry: Player.Telemetry;\n  private _vendorPlayer: VendorPlayer;\n\n  /**\n   * @private\n   */\n  constructor(\n    vendorPlayer: VendorPlayer,\n    telemetry: Player.Telemetry,\n    isHighLatencyReductionEnabled: boolean,\n  ) {\n    super();\n    this._isHighLatencyReductionEnabled = isHighLatencyReductionEnabled;\n    this._telemetry = telemetry;\n    this._vendorPlayer = vendorPlayer;\n\n    this._telemetry.subscribe(\n      this._increasePlaybackRate,\n      (telemetryData: Player.Telemetry.Data) => {\n        const { name, playerLiveLatency } = telemetryData as Player.Telemetry.Data.PlaybackQuality.Summary;\n        return this._shouldApplyHighLatencyReduction(name, playerLiveLatency)\n          && playerLiveLatency < MAX_LATENCY_PLAYBACK_INCREASE_THRESHOLD\n          && this._vendorPlayer.getPlaybackRate() < MAX_PLAYBACK_RATE;\n      }\n    );\n\n    this._telemetry.subscribe(\n      this._seekAhead,\n      (telemetryData: Player.Telemetry.Data) => {\n        const { name, playerLiveLatency } = telemetryData as Player.Telemetry.Data.PlaybackQuality.Summary;\n        return this._shouldApplyHighLatencyReduction(name, playerLiveLatency)\n          && playerLiveLatency >= MAX_LATENCY_PLAYBACK_INCREASE_THRESHOLD\n          && this._vendorPlayer.getBufferDuration() >= MAX_LATENCY_PLAYBACK_INCREASE_THRESHOLD;\n      }\n    );\n\n    this._telemetry.subscribe(\n      this._revertHighLatencyReduction,\n      (telemetryData: Player.Telemetry.Data) => {\n        const { name, playerLiveLatency } = telemetryData as Player.Telemetry.Data.PlaybackQuality.Summary;\n        return this._active && name === 'summary'\n          && playerLiveLatency <= MIN_LATENCY_PLAYBACK_INCREASE_THRESHOLD;\n      }\n    );\n  }\n\n  release(): void {\n    // NOTE(csantos): This event observer cannot be reused. So release all listeners attached to it.\n    this.removeAllListeners(LiveLatencyEventObserver.Event.HighLatencyReductionReverted);\n    this.removeAllListeners(LiveLatencyEventObserver.Event.IncreasePlaybackRate);\n    this.removeAllListeners(LiveLatencyEventObserver.Event.SeekAhead);\n\n    this._telemetry.unsubscribe(this._increasePlaybackRate);\n    this._telemetry.unsubscribe(this._seekAhead);\n    this._telemetry.unsubscribe(this._revertHighLatencyReduction);\n  }\n\n  private _increasePlaybackRate = () => {\n    this._active = true;\n    this._vendorPlayer.setPlaybackRate(MAX_PLAYBACK_RATE);\n    this.emit(LiveLatencyEventObserver.Event.IncreasePlaybackRate);\n  }\n\n  private _revertHighLatencyReduction = () => {\n    this._active = false;\n    this._vendorPlayer.setPlaybackRate(DEFAULT_PLAYBACK_RATE);\n    this.emit(LiveLatencyEventObserver.Event.HighLatencyReductionReverted);\n  }\n\n  private _seekAhead = () => {\n    this._active = true;\n    this._vendorPlayer.setPlaybackRate(DEFAULT_PLAYBACK_RATE);\n    const newPosition = this._vendorPlayer.getPosition() + this._vendorPlayer.getBufferDuration() - SEEK_BUFFER;\n    this._vendorPlayer.seekTo(newPosition);\n    this.emit(LiveLatencyEventObserver.Event.SeekAhead);\n  }\n\n  private _shouldApplyHighLatencyReduction(name: string, playerLiveLatency: number): boolean {\n    return this._isHighLatencyReductionEnabled && name === 'summary'\n      && playerLiveLatency > MIN_LATENCY_PLAYBACK_INCREASE_THRESHOLD\n      && this._vendorPlayer.getBufferDuration() >= MIN_LATENCY_PLAYBACK_INCREASE_THRESHOLD;\n  }\n}\n\n/**\n * @private\n */\nexport namespace LiveLatencyEventObserver {\n  /**\n   * @private\n   */\n  export enum Event {\n    HighLatencyReductionReverted = 'high-latency-reduction-reverted',\n    IncreasePlaybackRate = 'increase-playback-rate',\n    SeekAhead = 'seek-ahead',\n  }\n}\n"]}